apiVersion: batch/v1
kind: CronJob
metadata:
  name: oasa-cronjob
  namespace: oasa-telemat
spec:
  schedule: "0 4 * * *"  # Runs every day at 21pm
  jobTemplate:
    spec:
      template:
        spec:          
          containers:
          - name: oasa-job-container
            # image: oulisnikos/oasa-cron:0.0.2-prod
            image: localhost:5000/oasa-job:0.2.2
            envFrom:
            - configMapRef:
                name: oasa-cronjob-enviroment
            volumeMounts:
            - name: job-logs
              mountPath: /var/log/oasa
            # - name: otp-config-volume
            #   mountPath: /config/build-config.json
            #   readOnly: true
            #   subPath: build-config.json
            - name: data
              mountPath: /data
          volumes:
          - name: job-logs
            persistentVolumeClaim:
              claimName: job-logs-pvc
          - name: data
            persistentVolumeClaim:
              claimName: otp-shared-pvc
          # - name: otp-config-volume
          #   configMap:
          #     defaultMode: 0700
          #     name: otp-config
          restartPolicy: Never
          initContainers:
          - name: create-directories
            image: busybox
            command: ["sh", "-c", "mkdir -p /data/routers/default"]
            volumeMounts:
              - name: data
                mountPath: /data
          - name: wait-mysql
            image: mysql:8.4
            env:
              - name: MYSQL_HOST
                value: "mysql-svc"   # <-- your MySQL Service DNS
              - name: MYSQL_PORT
                value: "3306"
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mysql-secret
                    key: MYSQL_ROOT_PASSWORD
            command: ["sh","-c"]
            args:
              - |
                set -e
                export MYSQL_PWD="$MYSQL_ROOT_PASSWORD"
                until mysqladmin ping -h "$MYSQL_HOST" -P "$MYSQL_PORT" -u root --silent; do
                  echo "ðŸŸ  Waiting for MySQL at $MYSQL_HOST:$MYSQL_PORT ..."
                  sleep 2
                done
                echo "ðŸŸ¢ MySQL is ready."